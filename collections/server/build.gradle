plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

jib.to.image = "eu.gcr.io/moneycol/collections-api:0.1.0"

version "0.1.0"
group "server"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.3.2'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

ext {
    logbackVersion = "1.2.3"
    lombokVersion = "1.18.8"
    junitVersion = "5.6.0"
    mockitoJunitJupiterVersion = "2.22.0"
    firebaseSdkVersion = "6.11.0"
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut:micronaut-security"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-security-jwt"
    compile "org.projectlombok:lombok:$lombokVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "com.google.firebase:firebase-admin:$firebaseSdkVersion"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    
    testCompile "io.micronaut.test:micronaut-test-junit5:1.1.5"
    testCompile group: 'io.micronaut.test', name: 'micronaut-test-core', version: '1.1.5'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "org.mockito:mockito-junit-jupiter:$mockitoJunitJupiterVersion"
    testCompile(
            "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    )
    

}

test.classpath += configurations.developmentOnly

mainClassName = "com.moneycol.collections.server.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
