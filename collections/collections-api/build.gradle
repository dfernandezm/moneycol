// See docs and upgrades:
// https://micronaut-projects.github.io/micronaut-gradle-plugin/latest/
plugins {
    id("java")
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.2"
    id("com.google.cloud.tools.jib") version "3.2.0"
}

version "0.2.0"
group "collections-api"

repositories {
    mavenCentral()
}

ext {
    logbackVersion = "1.2.11"
    googleCloudFirestoreVersion = "3.0.11"
    lombokVersion = "1.18.22"
    junitVersion = "5.8.1"
    mockitoJunitJupiterVersion = "4.3.1"
    firebaseSdkVersion = "8.1.0"
    guavaVersion = "31.1-jre"
    assertjVersion = "3.22.0"
    testContainersVersion = "1.16.3"
    systemRulesVersion = "1.19.0"

    // change to Project Reactor, implementation("io.projectreactor:reactor-core")
    // https://medium.com/@sybrenbolandit/upgrade-to-micronaut-3-da59ab814197
    rxJava2Version = "1.2.1"
}

dependencies {

    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.security:micronaut-security-jwt")

    implementation "org.projectlombok:lombok:$lombokVersion"

    implementation ("com.google.firebase:firebase-admin:$firebaseSdkVersion") {
        exclude group: "com.google.cloud", module: "google-cloud-firestore"
    }

    implementation("io.micronaut.rxjava2:micronaut-rxjava2")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2-http-client")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2-http-server-netty")

    implementation("com.google.cloud:google-cloud-firestore:$googleCloudFirestoreVersion")
    implementation("com.google.guava:guava:$guavaVersion")

    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testImplementation("org.assertj:assertj-core:$assertjVersion")

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoJunitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:gcloud:$testContainersVersion"
    testImplementation "com.github.stefanbirkner:system-rules:$systemRulesVersion"
}

// main class is inferred from `application` configuration (see below)
jib.from.image = "gcr.io/distroless/java:11-debug"

// use JUnit 5 platform
// environment variables required to run tests in command line:
// - GOOGLE_APPLICATION_CREDENTIALS: path to service account json key giving Firestore/Firebase Admin permission
// - FIREBASE_API_KEY: valid key
test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    // Uncomment these lines to get full logging output when running
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'

}

application {
    mainClass.set("com.moneycol.collections.server.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
    }
}
